계정 생성+권한주기
저렇게 줘도 되고 귀찮으시면 최고 관리 권한줘도 되고 만드는 사람의 자유입니다
저는 최고 권한 주는게 자꾸 에러나서 쪼개서 권한 할당해줬어요

CREATE USER mboard IDENTIFIED BY mboard;

grant connect, dba, resource to mboard;
grant create sequence to mboard; 






테이블 생성(총 8개)

공지사항, 문의, faq는 비슷한 구조라도 테이블은 따로 만드는 것이 좋다는 말씀에 테이블 생성하지 않았습니다
회원이랑 연결만 되니 나중에 여유시간이 있다면 테이블을 추가합시다

혹시 잘못된 부분있으면 꼭! 말씀해주세여


CREATE TABLE member_board 
( 
    user_id VARCHAR2(20)	NOT NULL,
    pw  VARCHAR2(20),
    email   VARCHAR2(30),
    member_date TIMESTAMP,
    CONSTRAINT member_board PRIMARY KEY (user_id)
);

COMMENT ON TABLE member_board IS '회원정보';

COMMENT ON COLUMN member_board.user_id IS '회원 아이디';
COMMENT ON COLUMN member_board.pw IS '비밀번호';
COMMENT ON COLUMN member_board.email IS '이메일';
COMMENT ON COLUMN member_board.member_date IS '가입날짜';





CREATE TABLE scrap 
( 
    scrap_id INT	NOT NULL,
    scrap_address  VARCHAR2(100),
    user_id   VARCHAR2(20),
    scrap_title VARCHAR2(100),
    CONSTRAINT scrap PRIMARY KEY (scrap_id)
);

COMMENT ON TABLE scrap IS '스크랩';

COMMENT ON COLUMN scrap.scrap_id IS '스크랩 아이디';
COMMENT ON COLUMN scrap.scrap_address IS '스크랩 주소';
COMMENT ON COLUMN scrap.user_id IS '회원 아이디';
COMMENT ON COLUMN scrap.scrap_title IS '스크랩 제목';




CREATE TABLE movie_category 
( 
    category_id INT	NOT NULL,
    movie_catecory  VARCHAR2(100),
    CONSTRAINT movie_category PRIMARY KEY (category_id)
);

COMMENT ON TABLE movie_category IS '영화 카테고리';

COMMENT ON COLUMN movie_category.category_id IS '카테고리 아이디';
COMMENT ON COLUMN movie_category.movie_catecory IS '영화 카테고리';




CREATE TABLE movie_info 
( 
    movie_id INT    NOT NULL,
    movie_catecory  VARCHAR2(100),
    user_id  VARCHAR2(20),
    movie_title  VARCHAR2(100),
    movie_content  VARCHAR2(1000),
    movie_img  VARCHAR2(100),
    movie_date  TIMESTAMP,
    movie_views  INT,
    CONSTRAINT movie_info PRIMARY KEY (movie_id)
);

COMMENT ON TABLE movie_info IS '영화소개 게시판';

COMMENT ON COLUMN movie_info.movie_id IS '영화소개 아이디';
COMMENT ON COLUMN movie_info.movie_catecory IS '영화 카테고리';
COMMENT ON COLUMN movie_info.user_id IS '영화 아이디';
COMMENT ON COLUMN movie_info.movie_title IS '영화 제목';
COMMENT ON COLUMN movie_info.movie_content IS '영화 내용';
COMMENT ON COLUMN movie_info.movie_img IS '영화 파일경로';
COMMENT ON COLUMN movie_info.movie_date IS '작성 날짜';
COMMENT ON COLUMN movie_info.movie_views IS '조회수';




CREATE TABLE rating 
( 
    rating_id INT    NOT NULL,
    movie_id  INT,
    user_id  VARCHAR2(20),
    rating_score  INT,
    rating_avg  FLOAT,
    CONSTRAINT rating PRIMARY KEY (rating_id)
);

COMMENT ON TABLE rating IS '별점';

COMMENT ON COLUMN rating.rating_id IS '별점 아이디';
COMMENT ON COLUMN rating.movie_id IS '영화소개 아이디';
COMMENT ON COLUMN rating.user_id IS '회원 아이디';
COMMENT ON COLUMN rating.rating_score IS '별점';
COMMENT ON COLUMN rating.rating_avg IS '별점 평균';




CREATE TABLE review_board
( 
    review_id INT    NOT NULL,
    movie_id  INT,
    user_id  VARCHAR2(20),
    review_title   VARCHAR2(100),
    review_content  VARCHAR2(1000),
    review_date  TIMESTAMP,
    review_views  INT,
    total_push  INT,
    CONSTRAINT review_board PRIMARY KEY (review_id)
);

COMMENT ON TABLE review_board IS '영화리뷰 게시판';

COMMENT ON COLUMN review_board.review_id IS '리뷰 아이디';
COMMENT ON COLUMN review_board.movie_id IS '영화소개 아이디';
COMMENT ON COLUMN review_board.user_id IS '회원 아이디';
COMMENT ON COLUMN review_board.review_title IS '리뷰 제목';
COMMENT ON COLUMN review_board.review_content IS '리뷰 내용';
COMMENT ON COLUMN review_board.review_date IS '작성 날짜';
COMMENT ON COLUMN review_board.review_views IS '조회수';
COMMENT ON COLUMN review_board.total_push IS '추천수 합계';




CREATE TABLE tb_comment
( 
    comment_id INT    NOT NULL,
    review_id  INT,
    user_id  VARCHAR2(20),
    comment_content   VARCHAR2(500),
    comment_date TIMESTAMP,
    CONSTRAINT tb_comment PRIMARY KEY (comment_id)
);

COMMENT ON TABLE tb_comment IS '댓글';

COMMENT ON COLUMN tb_comment.comment_id IS '댓글 아이디';
COMMENT ON COLUMN tb_comment.review_id IS '리뷰 아이디';
COMMENT ON COLUMN tb_comment.user_id IS '회원 아이디';
COMMENT ON COLUMN tb_comment.comment_content IS '댓글 내용';
COMMENT ON COLUMN tb_comment.comment_date IS '댓글 작성날짜';




CREATE TABLE push
( 
    push_id INT    NOT NULL,
    review_id  INT,
    user_id  VARCHAR2(20),
    CONSTRAINT push PRIMARY KEY (push_id)
);

COMMENT ON TABLE push IS '추천수';

COMMENT ON COLUMN push.push_id IS '추천수 아이디';
COMMENT ON COLUMN push.review_id IS '리뷰 아이디';
COMMENT ON COLUMN push.user_id IS '회원 아이디';








시퀀스 생성 (총 7개)

CREATE SEQUENCE MOVIE_CATEGORY_SEQ 
INCREMENT BY 1 
START WITH 1 
MINVALUE 1 
MAXVALUE 9999
NOCYCLE; 

CREATE SEQUENCE MOVIE_INFO_SEQ 
INCREMENT BY 1 
START WITH 1 
MINVALUE 1 
MAXVALUE 9999
NOCYCLE; 

CREATE SEQUENCE RATING_SEQ 
INCREMENT BY 1 
START WITH 1 
MINVALUE 1 
MAXVALUE 9999
NOCYCLE; 

CREATE SEQUENCE SCRAP_SEQ 
INCREMENT BY 1 
START WITH 1 
MINVALUE 1 
MAXVALUE 9999
NOCYCLE; 

CREATE SEQUENCE REVIEW_BOARD_SEQ 
INCREMENT BY 1 
START WITH 1 
MINVALUE 1 
MAXVALUE 9999
NOCYCLE; 

CREATE SEQUENCE TB_COMMENT_SEQ 
INCREMENT BY 1 
START WITH 1 
MINVALUE 1 
MAXVALUE 9999
NOCYCLE; 

CREATE SEQUENCE PUSH_SEQ 
INCREMENT BY 1 
START WITH 1 
MINVALUE 1 
MAXVALUE 9999
NOCYCLE; 









테스트 더미 데이터 삽입 
(스크랩 더미는 주소 부분이 애매해서 안 넣었어요
넣고 싶으신 분은 별도로 만들어 넣어주세요)

INSERT INTO member_board 
VALUES ('admin', 'admin', 'admin@google.com', SYSDATE);

INSERT INTO movie_category
VALUES (MOVIE_CATEGORY_SEQ.nextval, '액션');

INSERT INTO movie_info
VALUES (MOVIE_INFO_SEQ.nextval, '액션', 'admin', '어벤져스', '마블영화입니다', 'poster01.jpg', sysdate, 0);

INSERT INTO rating
VALUES (RATING_SEQ.nextval, 1, 'admin', 4, 4);

INSERT INTO review_board
VALUES (REVIEW_BOARD_SEQ.nextval, 1, 'admin', '어벤져스 감상후기', '영화감상 후기내용입니다', sysdate, 0, 0);

INSERT INTO tb_comment
VALUES (TB_COMMENT_SEQ.nextval, 1, 'admin', '영화감상 후기에 대한 댓글입니다', sysdate);

INSERT INTO push
VALUES (TB_COMMENT_SEQ.nextval, 1, 'admin');

test 수정+ 이클립스 수정 후 등록해보기 
수정된 파일 이클립스로 pull 하기

알겠습니다.
네
